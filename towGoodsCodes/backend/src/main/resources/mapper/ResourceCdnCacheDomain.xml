<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yamu.data.sample.service.resources.mapper.CdnCacheDomainMapper">
    <select id="cdnCacheAnalysis" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheDomain">
        select parse_time ,domain_name,
        sum(parse_total_cnt) as cdn_parse_total_cnt,
        sum(cache_parse_total_cnt) as cache_parse_total_cnt
        from
        ${queryParam.queryTable}
        <where>
            parse_time &gt;= #{queryParam.startTime}
            and parse_time &lt;= #{queryParam.endTime}
            and domain_name global in
            <foreach collection="queryList" item="domainName" index="index" open="(" close=")" separator=",">
                #{domainName}
            </foreach>
        </where>
        group by domain_name,parse_time
        order by sum(parse_total_cnt) desc
    </select>
    <select id="cdnCacheAnalysisEvery" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheDomain">
        select parse_time ,domain_name,
        sum(parse_total_cnt) as cdn_parse_total_cnt,
        sum(cache_parse_total_cnt) as cache_parse_total_cnt
        from (<if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
            select parse_time,
            domain_name,
            parse_total_cnt,
            a_record_parse_total_cnt,
            net_in_parse_total_cnt,
            net_out_parse_total_cnt,
            within_parse_total_cnt,
            without_parse_total_cnt,
            cdn_parse_total_cnt,
            cache_parse_total_cnt,
            zgyd_cnt,
            zgdx_cnt,
            zglt_cnt,
            gat_cnt,
            out_country_cnt,
            unknown_cnt
            from (
        </if>
        select
        parse_time,
        domain_name,
        <include refid="parms"/>,
        row_number() OVER (PARTITION by parse_time ORDER BY parse_total_cnt DESC) rank_number
        from ${queryParam.queryTable}
        <where>
            <include refid="topNParm"/>
        </where>
        group by parse_time,domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by ${queryParam.orderBy}
        <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
            ) where rank_number &lt;= #{queryParam.rankNumber}
        </if>
        limit ${queryParam.offset}, ${queryParam.limit})
        group by
        parse_time,
        domain_name
        settings allow_experimental_window_functions = 1
    </select>

    <select id="getTopN" resultType="java.lang.String">
            select domain_name as domainName
            from  ${queryParam.queryTable}
            <where>
                <include refid="topNParm"/>
            </where>
            group by domain_name
            order by sum(parse_total_cnt) desc
            limit #{queryParam.rankNumber}
    </select>



    <select id="getCount" resultType="java.lang.Long">
        select count(1) from (select domain_name,sum(cdn_parse_total_cnt) as cdnParseTotalCnt
        from  ${queryParam.queryTable}
        <where>
            <include refid="topNParm"/>
            <if test="topDomainName != null and topDomainName.size()>0">
                and domain_name in
                <foreach collection="topDomainName" item="domainName" index="index" open="(" close=")" separator=",">
                    #{domainName}
                </foreach>
            </if>
        </where>
        group by domain_name
        order by sum(parse_total_cnt) desc)
    </select>

    <select id="findDetailCount" resultType="java.lang.Long">
        select count(1) from (
        select
        domain_name as domainName
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            , sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt
        </if>
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveAllParm"/>
            <if test="queryParam.rankNumber != null and queryParam.rankNumber !=''">
                and domain_name global in(
                select domain_name as domainName
                from  ${queryParam.queryTable}
                <where>
                    <include refid="topNParm"/>
                </where>
                group by domain_name
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc
                limit #{queryParam.rankNumber})
            </if>
        </where>
        group by domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        )
    </select>
    <select id="findDetailData" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheDomain">
        select
        concat(#{queryParam.startTime},'~',#{queryParam.endTime}) as timeRange,
        domain_name as domainName,
        <include refid="parms"/>,
        sum(idc_parse_total_cnt+zl_parse_total_cnt + tt_parse_total_cnt + zx_parse_total_cnt) as icpAccuracyParseTotalCnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveAllParm"/>
            <if test="queryParam.rankNumber != null and queryParam.rankNumber !=''">
                and domain_name global in(
                select domain_name as domainName
                from  ${queryParam.queryTable}
                <where>
                    <include refid="topNParm"/>
                </where>
                group by domain_name
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc
                limit #{queryParam.rankNumber})
            </if>
        </where>
        group by domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by ${queryParam.orderBy}
        limit #{queryParam.offset},#{queryParam.limit}
    </select>

    <select id="findTimeSizeCount" resultType="java.lang.Long">

    select count(1) from (
        <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
            select parse_time,domain_name from (
        </if>
        select
        parse_time,
        domain_name,
        sum(parse_total_cnt) as parseTotalCnt,
        row_number() OVER (PARTITION by parse_time ORDER BY parseTotalCnt DESC) rank_number
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            , sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt
        </if>
        from ${queryParam.queryTable}
        <where>
            <include refid="topNParm"/>
        </where>
        group by parse_time,domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
            ) where rank_number &lt;= #{queryParam.rankNumber}
        </if>
        )
        settings allow_experimental_window_functions = 1
    </select>
    <select id="findTimeSizeData" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheDomain">

        <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
            select parse_time,
            domain_name,
            parse_total_cnt,
            a_record_parse_total_cnt,
            net_in_parse_total_cnt,
            net_out_parse_total_cnt,
            within_parse_total_cnt,
            without_parse_total_cnt,
            cdn_parse_total_cnt,
            cache_parse_total_cnt,
            zgyd_cnt,
            zgdx_cnt,
            zglt_cnt,
            gat_cnt,
            out_country_cnt,
            unknown_cnt,
            icpAccuracyParseTotalCnt
            from (
        </if>
            select
            parse_time,
            domain_name,
            <include refid="parms"/>,
            row_number() OVER (PARTITION by parse_time ORDER BY parse_total_cnt DESC) rank_number,
            sum(idc_parse_total_cnt+zl_parse_total_cnt + tt_parse_total_cnt + zx_parse_total_cnt) as icpAccuracyParseTotalCnt
            from ${queryParam.queryTable}
            <where>
                <include refid="topNParm"/>
            </where>
            group by parse_time,domain_name
            <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
                between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
            </if>
            order by ${queryParam.orderBy}
                <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
                    ) where rank_number &lt;= #{queryParam.rankNumber}
                </if>
            limit ${queryParam.offset}, ${queryParam.limit}
        settings allow_experimental_window_functions = 1

    </select>

    <select id="findParseReport" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheDomain">
     select parse_time,
        SUM(a_record_parse_total_cnt) as aRecordParseTotalCnt,
        sum(net_in_parse_total_cnt) as netInParseTotalCnt,
        sum(net_out_parse_total_cnt) as netOutParseTotalCnt,
        sum(parse_total_cnt) as cdnParseTotalCnt,
        sum(cache_parse_total_cnt) as cacheParseTotalCnt
        from ${queryParam.queryTable}
        <where>
            <include refid="detailParm"/>
        </where>
        group by parse_time

    </select>
    <select id="findRateReport" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheDomain">

        select parse_time,
        sum(parse_total_cnt) as parseTotalCnt,
        SUM(a_record_parse_total_cnt) as aRecordParseTotalCnt,
        sum(net_in_parse_total_cnt) as netInParseTotalCnt,
        sum(net_out_parse_total_cnt) as netOutParseTotalCnt,
        sum(within_parse_total_cnt) as withinParseTotalCnt,
        sum(without_parse_total_cnt) as withoutParseTotalCnt
               from ${queryParam.queryTable}
        <where>
            <include refid="detailParm"/>
        </where>
         group by parse_time
    </select>

    <sql id="parms">
        sum(parse_total_cnt) as parse_total_cnt,
        SUM(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
        sum(within_parse_total_cnt) as within_parse_total_cnt,
        sum(without_parse_total_cnt) as without_parse_total_cnt,
        sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
        sum(cache_parse_total_cnt) as cache_parse_total_cnt,
        sum(zgyd_cnt) as zgyd_cnt,
        sum(zgdx_cnt) as zgdx_cnt,
        sum(zglt_cnt) as zglt_cnt,
        sum(gat_cnt) as gat_cnt,
        sum(out_country_cnt) as out_country_cnt,
        sum(unknown_cnt) as unknown_cnt
    </sql>

    <select id="findtopNServiceReport" resultType="com.yamu.data.sample.service.resources.entity.bo.ResourceCdnCacheDomainReport">

        select
        website_app_name websiteAppName,
        sum(parse_total_cnt) cdnParseTotalCnt
        from ${queryParam.queryCdnTable}
        <where>
            <include refid="selectiveAllCdnParm"/>
        </where>
        group by
        website_app_name
        order by cdnParseTotalCnt desc

    </select>
    <select id="topNServiceDetail" resultType="com.yamu.data.sample.service.resources.entity.bo.ResourceCdnCacheDomainDetail">
        select *,round(cdnDomainParseTotalCnt / business_parse_total_cnt, 4) cdnProportion from (
        select domain_name domain_name,website_app_name websiteAppName,
        SUM(parse_total_cnt) cdnDomainParseTotalCnt,sum(cdnDomainParseTotalCnt) over (PARTITION by domain_name) as business_parse_total_cnt
        from ${queryParam.queryCdnTable}
        <where>
            <include refid="selectiveAllCdnParm"/>
        </where>
        group by domain_name,website_app_name
        order by cdnDomainParseTotalCnt desc
        limit #{queryParam.offset}, #{queryParam.limit})
    </select>
    <select id="countTopNServiceDetail" resultType="java.lang.Long">
        select count(*) from
        (select domain_name domain_name,website_app_name websiteAppName,
        SUM(parse_total_cnt) cdnDomainParseTotalCnt,sum(cdnDomainParseTotalCnt) over (PARTITION by domain_name) as business_parse_total_cnt
        from ${queryParam.queryCdnTable}
        <where>
            <include refid="selectiveAllCdnParm"/>
        </where>
        group by domain_name,website_app_name
        )
    </select>
    <sql id="selectiveAllCdnParm">
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.qtype != null and queryParam.qtype != ''">and qtype = #{queryParam.qtype}</if>
        <if test="queryParam.qOtherType">and qtype not in ('1','28','5','2')</if>
        <if test="queryParam.resourceType != null and queryParam.resourceType != ''">and resource_type = #{queryParam.resourceType}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != '' and queryParam.statisticsWay == 'every'">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != '' and queryParam.statisticsWay != 'every'">and parse_time &lt; #{queryParam.endTime}</if>
        <if test="queryParam.domainName != null and queryParam.domainName != ''">and domain_name = cutToFirstSignificantSubdomain(#{queryParam.domainName})</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.queryTime != null and queryParam.queryTime != ''">and parse_time = #{queryParam.queryTime}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>

    <sql id="selectiveAllParm">
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.qtype != null and queryParam.qtype != ''">and qtype = #{queryParam.qtype}</if>
        <if test="queryParam.qOtherType">and qtype not in ('1','28','5','2')</if>
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != '' ">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.resourceType != null and queryParam.resourceType != ''">and resource_type = #{queryParam.resourceType}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.domainName != null and queryParam.domainName != ''">and domain_name like concat('%',#{queryParam.domainName},'%')</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>

    <sql id="topNParm">
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.qtype != null and queryParam.qtype != ''">and qtype = #{queryParam.qtype}</if>
        <if test="queryParam.qOtherType">and qtype not in ('1','28','5','2')</if>
        <if test="queryParam.resourceType != null and queryParam.resourceType != ''">and resource_type = #{queryParam.resourceType}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != '' ">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.domainName != null and queryParam.domainName != ''">and domain_name like concat('%',#{queryParam.domainName},'%')</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>


    <sql id="detailParm">
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.qtype != null and queryParam.qtype != ''">and qtype = #{queryParam.qtype}</if>
        <if test="queryParam.qOtherType">and qtype not in ('1','28','5','2')</if>
        <if test="queryParam.resourceType != null and queryParam.resourceType != ''">and resource_type = #{queryParam.resourceType}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != '' ">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.domainName != null and queryParam.domainName != ''">and domain_name = #{queryParam.domainName}</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>
</mapper>