<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yamu.data.sample.service.resources.mapper.PopularDomainTopNTypeMapper">

    <select id="countCdnReportlList" resultType="java.lang.Long">
        select count(*) from(
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null">
            select * from (
        </if>
        SELECT
        o1.business as cdnBusiness,
        o1.parse_total_cnt as cdnResponseCnt ,
        o3.parse_total_cnt as cdnParseTotalCnt,
        round((o1.parse_total_cnt/ o2.parse_total_cnt)*100,2) as responseProportion ,
        round((o1.parse_total_cnt/ o3.parse_total_cnt)*100,2) as cdnResponseProportion ,
        o1.parse_success_cnt as successCnt ,
        round((o1.parse_success_cnt/ o1.parse_total_cnt)*100,2) successRate ,
        o1.net_in_parse_total_cnt as netInCnt,
        round((o1.net_in_parse_total_cnt/ o1.parse_total_cnt)*100,2) as netInRate ,
        o1.within_parse_total_cnt as withinCnt ,
        round((o1.within_parse_total_cnt/ o1.parse_total_cnt)*100,2) as withinRate
        FROM
        (
        select
        business ,
        sum(parse_total_cnt) parse_total_cnt ,
        sum(parse_success_cnt) parse_success_cnt ,
        sum(net_in_parse_total_cnt) net_in_parse_total_cnt ,
        sum(within_parse_total_cnt) within_parse_total_cnt
        from
        ${queryParam.queryTable}
        <where>
            <include refid="selectiveParamCdn"/>
        </where>
        group by
        business
        order by parse_total_cnt desc
        <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
            limit #{queryParam.rankNumber}
        </if>
        ) o1 ,
        (
        select
        sum(parse_total_cnt) as parse_total_cnt
        from
        ${queryParam.aQueryTable}
        <where>
            <include refid="selectiveParamCdnTime"/>
        </where>
        ) o2 ,
        (
        select
        sum(parse_total_cnt) parse_total_cnt
        from
        ${queryParam.queryTable}
        <where>
            <include refid="selectiveParamCdnTime"/>
        </where>
        ) o3
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null">
            )
            <where>
                <include refid="selectiveParamCdnNet"/>
            </where>
        </if>
        order by
        cdnResponseCnt desc
        )
    </select>
    <select id="findCdnReport"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainCdnReport">
        select * from (
        SELECT
        o1.business as cdnBusiness,
        o1.parse_total_cnt as cdnResponseCnt ,
        o3.parse_total_cnt as cdnParseTotalCnt,
        round((o1.parse_total_cnt/ o2.parse_total_cnt)*100,2) as responseProportion ,
        round((o1.parse_total_cnt/ o3.parse_total_cnt)*100,2) as cdnResponseProportion ,
        o1.parse_success_cnt as successCnt ,
        round((o1.parse_success_cnt/ o1.parse_total_cnt)*100,2) successRate ,
        o1.net_in_parse_total_cnt as netInCnt,
        round((o1.net_in_parse_total_cnt/ o1.parse_total_cnt)*100,2) as netInRate ,
        o1.within_parse_total_cnt as withinCnt ,
        round((o1.within_parse_total_cnt/ o1.parse_total_cnt)*100,2) as withinRate
        FROM
        (
        select
        business ,
        sum(parse_total_cnt) parse_total_cnt ,
        sum(parse_success_cnt) parse_success_cnt ,
        sum(net_in_parse_total_cnt) net_in_parse_total_cnt ,
        sum(within_parse_total_cnt) within_parse_total_cnt
        from
        ${queryParam.queryTable}
        <where>
            <include refid="selectiveParamCdn"/>
        </where>
        group by
        business
        order by parse_total_cnt desc
        <!--        <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">-->
        <!--            limit #{queryParam.rankNumber}-->
        <!--        </if>-->
        ) o1 ,
        (
        select
        sum(parse_total_cnt) as parse_total_cnt
        from
        ${queryParam.aQueryTable}
        <where>
            <include refid="selectiveParamCdnTime"/>
        </where>
        ) o2 ,
        (
        select
        sum(parse_total_cnt) parse_total_cnt
        from
        ${queryParam.queryTable}
        <where>
            <include refid="selectiveParamCdnTime"/>
        </where>
        ) o3
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null">
            <where>
                <include refid="selectiveParamCdnNet"/>
            </where>
        </if>
        order by
        cdnResponseCnt desc)
        limit #{queryParam.offset}, #{queryParam.limit}
    </select>

    <sql id="selectiveParamCdnNet">
        <if test="queryParam.netInRateMax != null and queryParam.netInRateMax != ''">and netInRate  &lt;= #{queryParam.netInRateMax}</if>
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMin != ''">and netInRate >= #{queryParam.netInRateMin}</if>
    </sql>
    <sql id="selectiveParamCdnTime">
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != ''">and parse_time &lt; #{queryParam.endTime}</if>
    </sql>
    <sql id="selectiveParamCdn">
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != ''">and parse_time &lt; #{queryParam.endTime}</if>
        <if test="queryParam.domainName != null and queryParam.domainName != ''">and domain_name ilike concat('%',#{queryParam.domainName},'%')</if>
        <if test="queryParam.business != null and queryParam.business != ''">and business ilike concat('%',#{queryParam.business},'%')</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>

    <select id="queryDataGroupByWebsiteTypeByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNType">
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            select * from (
        </if>
            select domain_type,
            sum(parse_total_cnt) as parse_total_cnt,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
            sum(parse_success_cnt) as parse_success_cnt,
            sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
            sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
            sum(within_parse_total_cnt) as within_parse_total_cnt,
            sum(without_parse_total_cnt) as without_parse_total_cnt,
            sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
            <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
            sum(idc_parse_total_cnt) as idc_parse_total_cnt,
            idc_parse_total_cnt+sum(zl_parse_total_cnt + tt_parse_total_cnt + zx_parse_total_cnt) as icpAccuracyParseTotalCnt
            from ${queryParam.queryTable}
            <where>
                <include refid="selectiveParam"/>
                <if test="(queryParam.rankNumber != '' and queryParam.rankNumber != null) and (queryParam.domainType == null or queryParam.domainType == '')">
                    and domain_type global in (
                    select domain_type
                    from ${queryParam.queryTable}
                    <where>
                        <include refid="selectiveParam"/>
                    </where>
                    group by domain_type
                    order by sum(parse_total_cnt) desc limit ${queryParam.rankNumber}
                    )
                </if>
            </where>
            group by domain_type
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            )
            <where>
                <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
            </where>
        </if>
        order by ${queryParam.orderBy}
        limit #{queryParam.offset}, #{queryParam.limit}
    </select>
    <select id="countQueryDataGroupByWebsiteTypeByParam" resultType="java.lang.Long">
        select count(1) from (
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            select * from (
        </if>
            select domain_type,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
            <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
            sum(net_in_parse_total_cnt) as net_in_parse_total_cnt
            from ${queryParam.queryTable}
            <where>
                <include refid="selectiveParam"/>
                <if test="(queryParam.rankNumber != '' and queryParam.rankNumber != null) and (queryParam.domainType == null or queryParam.domainType == '')">
                    and domain_type global in (
                    select domain_type
                    from ${queryParam.queryTable}
                    <where>
                        <include refid="selectiveParam"/>
                    </where>
                    group by domain_type
                    order by sum(parse_total_cnt) desc limit ${queryParam.rankNumber}
                    )
                </if>
            </where>
            group by domain_type
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            )
            <where>
                <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
            </where>
        </if>
        )
    </select>
    <select id="queryDataGroupByParseTimeByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNType">
        select
        parse_time,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(parse_success_cnt) as parse_success_cnt,
        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
        sum(within_parse_total_cnt) as within_parse_total_cnt,
        sum(without_parse_total_cnt) as without_parse_total_cnt,
        sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
        sum(idc_parse_total_cnt) as idc_parse_total_cnt
        from ${queryParam.queryTable}
        where
        parse_time &gt;= #{queryParam.startTime}
        and parse_time &lt;= #{queryParam.endTime}
        and domain_type global in (select
        domain_type
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
            <if test = "queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_type global in (
                select
                domain_type
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by domain_type
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber}
                )
            </if>
        </where>
        group by domain_type
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        )
        group by parse_time
        order by parse_time
    </select>
    <select id="findTrendReportGroupByIspByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNType">
        select
        answer_first_isp ,
        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
            <if test="(queryParam.rankNumber != '' and queryParam.rankNumber != null) and (queryParam.domainType == null or queryParam.domainType == '')">
                and domain_type global in (
                select domain_type
                from ${queryParam.queryTable}
                <where>
                    <include refid="selectiveParam"/>
                </where>
                group by domain_type
                limit ${queryParam.rankNumber}
                )
            </if>
        </where>
        group by answer_first_isp
        order by a_record_parse_total_cnt desc
    </select>


    <select id="findTrendReportGroupByIspByParamEvery"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNType">
        select
        answer_first_isp,
        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParamEvery"/>
        </where>
        group by answer_first_isp
        order by a_record_parse_total_cnt desc
    </select>

    <select id="queryDataGroupByParseTimeAndWebsiteTypeByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNType">
        select * from (
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            select * from (
        </if>
                select parse_time, domain_type,
                sum(parse_total_cnt) as parse_total_cnt,
                sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
                sum(parse_success_cnt) as parse_success_cnt,
                sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
                sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
                sum(within_parse_total_cnt) as within_parse_total_cnt,
                sum(without_parse_total_cnt) as without_parse_total_cnt,
                sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
                sum(idc_parse_total_cnt) as idc_parse_total_cnt,
                <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
                row_number() over (partition by parse_time order by parse_total_cnt desc) as rank_number,
                idc_parse_total_cnt+sum(zl_parse_total_cnt + tt_parse_total_cnt + zx_parse_total_cnt) as icpAccuracyParseTotalCnt
                from ${queryParam.queryTable}
                <where>
                    <include refid="selectiveParam"/>
                </where>
                group by parse_time, domain_type
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            )
            <where>
                <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
            </where>
        </if>
        order by ${queryParam.orderBy}
        )
        <where>
            <if test="queryParam.rankNumber != null"> rank_number &lt;= #{queryParam.rankNumber}</if>
        </where>
        limit #{queryParam.offset}, #{queryParam.limit}
        settings allow_experimental_window_functions = 1
    </select>
    <select id="countQueryDataGroupByParseTimeAndWebsiteTypeByParam" resultType="java.lang.Long">
        select count(1) from (
            select * from (
            <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                select *,
                    row_number() over (partition by parse_time order by parse_total_cnt desc) as rank_number
                from (
            </if>
                select parse_time, domain_type,
                sum(parse_total_cnt) as parse_total_cnt,
                sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
                <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
                sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
                row_number() over (partition by parse_time order by parse_total_cnt desc) as rank_number
                from ${queryParam.queryTable}
                <where>
                    <include refid="selectiveParam"/>
                </where>
                group by parse_time, domain_type
            <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                )
                <where>
                    <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                    <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
                </where>
            </if>
            )
            <where>
                <if test="queryParam.rankNumber != null">
                    rank_number &lt;= #{queryParam.rankNumber}
                </if>
            </where>
        )
        settings allow_experimental_window_functions = 1
    </select>

    <select id="queryLastTimeDataGroupByWebsiteTypeByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNType">
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            select * from (
        </if>
            select domain_type,
            sum(parse_total_cnt) as parse_total_cnt,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
            sum(parse_success_cnt) as parse_success_cnt,
            sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
            sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
            sum(within_parse_total_cnt) as within_parse_total_cnt,
            sum(without_parse_total_cnt) as without_parse_total_cnt,
            sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
            <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
            sum(idc_parse_total_cnt) as idc_parse_total_cnt
            from ${queryParam.queryTable}
            <where>
                <include refid="selectiveParam"/>
                <if test="queryParam.domainType == null or queryParam.domainType == ''">
                    and domain_type global in
                    <foreach collection="queryList" open="(" close=")" separator="," item="item">
                        #{item}
                    </foreach>
                </if>
            </where>
            group by domain_type
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            )
            <where>
                <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
            </where>
        </if>
    </select>
    <select id="queryLastTimeDataGroupByParseTimeAndWebsiteTypeByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNType">
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            select * from (
        </if>
            select parse_time, domain_type,
            sum(parse_total_cnt) as parse_total_cnt,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
            sum(parse_success_cnt) as parse_success_cnt,
            sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
            sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
            sum(within_parse_total_cnt) as within_parse_total_cnt,
            sum(without_parse_total_cnt) as without_parse_total_cnt,
            sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
            sum(idc_parse_total_cnt) as idc_parse_total_cnt,
            <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
            row_number() over (partition by parse_time order by parse_total_cnt desc) as rank_number
            from ${queryParam.queryTable}
            <where>
                <include refid="selectiveParam"/>
                <if test="queryParam.domainType == null or queryParam.domainType == ''">
                    and domain_type global in
                    <foreach collection="queryList" open="(" close=")" separator="," item="item">
                        #{item}
                    </foreach>
                </if>
            </where>
            group by parse_time, domain_type
        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
            )
            <where>
                <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
            </where>
        </if>
        order by parse_time desc, parse_total_cnt desc
        settings allow_experimental_window_functions = 1
    </select>
    <select id="queryNetInParseGroupByDomainType"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNType">
        select domain_type,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
        </where>
        group by domain_type
        order by parse_total_cnt desc limit ${queryParam.rankNumber}
    </select>

    <select id="queryDataGroupByOperatorByParam"
            resultType="java.lang.String">
        select
        answer_first_isp
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveDetailParam"/>
        </where>
        group by answer_first_isp
    </select>

    <select id="countQueryDataGroupByWebsiteTypeDetailByParam" resultType="java.lang.Long">
        select count(1) from (
        select domain_name,answer_first_isp
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveDetailParam"/>
        </where>
        group by domain_name,answer_first_isp
        order by sum(parse_total_cnt) desc
        )
    </select>

    <select id="queryDataGroupByWebsiteTypeDetailByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNTypeDetail">
        select domain_name,answer_first_isp,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveDetailParam"/>
        </where>
        group by domain_name,answer_first_isp
        order by parse_total_cnt desc
        limit #{queryParam.offset}, #{queryParam.limit}
    </select>

    <select id="queryDataGroupByWebsiteTypeDetailByParamExcel"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNTypeDetail">
        select domain_name,answer_first_isp,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveDetailParam"/>
            <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_type global in (
                    <if test="queryParam.statisticsWay != null and queryParam.statisticsWay == 'all'">
                        select domain_type from (
                        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                            select * from (
                        </if>
                        select domain_type,
                        sum(parse_total_cnt) as parse_total_cnt,
                        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
                        sum(parse_success_cnt) as parse_success_cnt,
                        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
                        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
                        sum(within_parse_total_cnt) as within_parse_total_cnt,
                        sum(without_parse_total_cnt) as without_parse_total_cnt,
                        sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
                        <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
                        sum(idc_parse_total_cnt) as idc_parse_total_cnt
                        from ${queryParam.aQueryTable}
                        <where>
                            <include refid="selectiveParam"/>
                            <if test="(queryParam.rankNumber != '' and queryParam.rankNumber != null) and (queryParam.domainType == null or queryParam.domainType == '')">
                                and domain_type global in (
                                select domain_type
                                from ${queryParam.aQueryTable}
                                <where>
                                    <include refid="selectiveParam"/>
                                </where>
                                group by domain_type
                                order by sum(parse_total_cnt) desc limit ${queryParam.rankNumber}
                                )
                            </if>
                        </where>
                        group by domain_type
                        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                            )
                            <where>
                                <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                                <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
                            </where>
                        </if>
                        order by parse_total_cnt desc
                        limit #{queryParam.offset}, #{queryParam.limit})
                    </if>
                    <if test="queryParam.statisticsWay != null and queryParam.statisticsWay == 'every'">
                        select domain_type from (
                        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                            select * from (
                        </if>
                        select parse_time, domain_type,
                        sum(parse_total_cnt) as parse_total_cnt,
                        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
                        sum(parse_success_cnt) as parse_success_cnt,
                        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
                        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
                        sum(within_parse_total_cnt) as within_parse_total_cnt,
                        sum(without_parse_total_cnt) as without_parse_total_cnt,
                        sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
                        sum(idc_parse_total_cnt) as idc_parse_total_cnt,
                        <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
                        row_number() over (partition by parse_time order by parse_total_cnt desc) as rank_number
                        from ${queryParam.aQueryTable}
                        <where>
                            <include refid="selectiveParam"/>
                        </where>
                        group by parse_time, domain_type
                        <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                            )
                            <where>
                                <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                                <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
                            </where>
                        </if>
                        order by parse_total_cnt desc
                        )
                        <where>
                            <if test="queryParam.rankNumber != null"> rank_number &lt;= #{queryParam.rankNumber}</if>
                        </where>
                        limit #{queryParam.offset}, #{queryParam.limit}
                    </if>
                )
            </if>
        </where>
        group by domain_name,answer_first_isp
        order by parse_total_cnt desc
        limit #{queryParam.offset}, #{queryParam.limit}
    </select>

    <select id="countQueryDataGroupByOutDomainTableDetailByParam" resultType="java.lang.Long">
        select count(1) from (
        select answer_first_ip
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveDetailParam"/>
        </where>
        group by answer_first_ip,answer_first_province,answer_first_city,answer_first_isp
        order by sum(parse_total_cnt) desc
        )
    </select>

    <select id="queryDataGroupByOutDomainTableDetailByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNTypeDetail">
        select answer_first_ip,answer_first_province,answer_first_city,answer_first_isp,
        sum(parse_total_cnt) as parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveDetailParam"/>
        </where>
        group by answer_first_ip,answer_first_province,answer_first_city,answer_first_isp
        order by parse_total_cnt desc
        limit #{queryParam.offset}, #{queryParam.limit}
    </select>

    <select id="queryDataGroupByOutDomainTableDetailByParamExcel"
            resultType="com.yamu.data.sample.service.resources.entity.po.PopularDomainTopNTypeDetail">
        select answer_first_ip,answer_first_province,answer_first_city,answer_first_isp,
        sum(parse_total_cnt) as parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveDetailParam"/>
            <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_type global in (
                <if test="queryParam.statisticsWay != null and queryParam.statisticsWay == 'all'">
                    select domain_type from (
                    <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                        select * from (
                    </if>
                    select domain_type,
                    sum(parse_total_cnt) as parse_total_cnt,
                    sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
                    sum(parse_success_cnt) as parse_success_cnt,
                    sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
                    sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
                    sum(within_parse_total_cnt) as within_parse_total_cnt,
                    sum(without_parse_total_cnt) as without_parse_total_cnt,
                    sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
                    <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
                    sum(idc_parse_total_cnt) as idc_parse_total_cnt
                    from ${queryParam.aQueryTable}
                    <where>
                        <include refid="selectiveParam"/>
                        <if test="(queryParam.rankNumber != '' and queryParam.rankNumber != null) and (queryParam.domainType == null or queryParam.domainType == '')">
                            and domain_type global in (
                            select domain_type
                            from ${queryParam.aQueryTable}
                            <where>
                                <include refid="selectiveParam"/>
                            </where>
                            group by domain_type
                            order by sum(parse_total_cnt) desc limit ${queryParam.rankNumber}
                            )
                        </if>
                    </where>
                    group by domain_type
                    <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                        )
                        <where>
                            <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                            <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
                        </where>
                    </if>
                    order by parse_total_cnt desc
                    limit #{queryParam.offset}, #{queryParam.limit})
                </if>
                <if test="queryParam.statisticsWay != null and queryParam.statisticsWay == 'every'">
                    select domain_type from (
                    <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                        select * from (
                    </if>
                    select parse_time, domain_type,
                    sum(parse_total_cnt) as parse_total_cnt,
                    sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
                    sum(parse_success_cnt) as parse_success_cnt,
                    sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
                    sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
                    sum(within_parse_total_cnt) as within_parse_total_cnt,
                    sum(without_parse_total_cnt) as without_parse_total_cnt,
                    sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
                    sum(idc_parse_total_cnt) as idc_parse_total_cnt,
                    <if test="queryParam.netInRateMin != null or queryParam.netInRateMax != null"> if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt)) as net_in_rate_val, </if>
                    row_number() over (partition by parse_time order by parse_total_cnt desc) as rank_number
                    from ${queryParam.aQueryTable}
                    <where>
                        <include refid="selectiveParam"/>
                    </where>
                    group by parse_time, domain_type
                    <if test="queryParam.netInRateMin != null or queryParam.netInRateMin != null">
                        )
                        <where>
                            <if test="queryParam.netInRateMin != null"> and net_in_rate_val &gt;= #{queryParam.netInRateMin}</if>
                            <if test="queryParam.netInRateMax != null"> and net_in_rate_val &lt;= #{queryParam.netInRateMax}</if>
                        </where>
                    </if>
                    order by parse_total_cnt desc
                    )
                    <where>
                        <if test="queryParam.rankNumber != null"> rank_number &lt;= #{queryParam.rankNumber}</if>
                    </where>
                    limit #{queryParam.offset}, #{queryParam.limit}
                </if>
                )
            </if>
        </where>
        group by answer_first_ip,answer_first_province,answer_first_city,answer_first_isp
        order by parse_total_cnt desc
        limit #{queryParam.offset}, #{queryParam.limit}
    </select>

    <select id="findUserSource"
            resultType="com.yamu.data.sample.service.resources.entity.po.ResourceWebsiteUserSource">
        select
        answer_first_city,
        website_type as websiteAppName,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(parse_total_cnt) over (PARTITION by website_type ) as ptc
        from ${queryParam.queryTable}
        <where>
            <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
            <if test="queryParam.endTime != null and queryParam.endTime != ''">and parse_time &lt;= #{queryParam.endTime}</if>
            <if test="queryParam.domainType != null and queryParam.domainType != ''">and website_type = #{queryParam.domainType}</if>
            <if test="queryParam.ipType != null and queryParam.ipType != ''">and ip_type = #{queryParam.ipType}</if>
            <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
            <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
            <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
            <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
            <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
            <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
            <if test="queryParam.queryTime != null and queryParam.queryTime != ''">and parse_time = #{queryParam.queryTime}</if>
            <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
            <if test = "(queryParam.rankNumber != null and queryParam.rankNumber != '') and (queryParam.domainType == null or queryParam.domainType == '')">
                and website_type global in (
                select website_type
                from ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null and queryParam.endTime != ''">and parse_time &lt;= #{queryParam.endTime}</if>
                    <if test="queryParam.domainType != null and queryParam.domainType != ''">and website_type = #{queryParam.domainType}</if>
                    <if test="queryParam.ipType != null and queryParam.ipType != ''">and ip_type = #{queryParam.ipType}</if>
                    <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
                    <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
                    <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
                    <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
                    <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
                    <if test="queryParam.queryTime != null and queryParam.queryTime != ''">and parse_time = #{queryParam.queryTime}</if>
                    <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
                </where>
                group by website_type
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber}
                )
            </if>
        </where>
        group by answer_first_city,website_type
        order by ptc desc,website_type,parse_total_cnt desc
    </select>

    <sql id="selectiveParam">
        <if test="queryParam.startTime != null">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.domainType != null and queryParam.domainType != ''">and domain_type = #{queryParam.domainType}</if>
        <if test="queryParam.domainTypeKey != null and queryParam.domainTypeKey != ''">and domain_type_key = #{queryParam.domainTypeKey}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.answerFirstIsp != null and queryParam.answerFirstIsp != ''">and answer_first_isp = #{queryParam.answerFirstIsp}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>

    <sql id="selectiveParamEvery">
        <if test="queryParam.startTime != null">and parse_time &gt;= #{queryParam.queryTime}</if>
        <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.queryTime}</if>
        <if test="queryParam.domainType != null and queryParam.domainType != ''">and domain_type = #{queryParam.domainType}</if>
        <if test="queryParam.domainTypeKey != null and queryParam.domainTypeKey != ''">and domain_type_key = #{queryParam.domainTypeKey}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.answerFirstIsp != null and queryParam.answerFirstIsp != ''">and answer_first_isp = #{queryParam.answerFirstIsp}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>

    <sql id="selectiveDetailParam">
        <if test="queryParam.startTime != null">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.domainType != null and queryParam.domainType != ''">and domain_type = #{queryParam.domainType}</if>
        <if test="queryParam.domainTypeKey != null and queryParam.domainTypeKey != ''">and domain_type_key = #{queryParam.domainTypeKey}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.answerFirstIsp != null and queryParam.answerFirstIsp != ''">and answer_first_isp = #{queryParam.answerFirstIsp}</if>
        <if test="queryParam.domainName != null and queryParam.domainName != ''">and domain_name = #{queryParam.domainName}</if>
        <if test="queryParam.queryTime != null and queryParam.queryTime != ''">and parse_time = #{queryParam.queryTime}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>

</mapper>