<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yamu.data.sample.service.resources.mapper.ResourceCdnCacheCompanyMapper">


    <select id="cdnAnalysisByParamAll" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheCompany">
        select parse_time ,business,
        sum(parse_total_cnt) as cdnParseTotalCnt,
        sum(cache_parse_total_cnt) as cacheParseTotalCnt
        from
        ${queryParam.queryTable}
        <where>
            parse_time &gt;= #{queryParam.startTime}
            and parse_time &lt;= #{queryParam.endTime}
            and business global in
            <foreach collection="queryList" item="businessName" index="index" open="(" close=")" separator=",">
                #{businessName}
            </foreach>
        </where>
        group by business,parse_time
        order by sum(parse_total_cnt) desc
    </select>


    <select id="cdnAnalysisByParamEvery" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheCompany">
        select parse_time, business,
        sum(parse_total_cnt) as cdn_parse_total_cnt,
        sum(cache_parse_total_cnt) as cache_parse_total_cnt
        from (select * from (
        select
        parse_time,
        business,
        sum(parse_total_cnt) as parse_total_cnt,
        SUM(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
        sum(within_parse_total_cnt) as within_parse_total_cnt,
        sum(without_parse_total_cnt) as without_parse_total_cnt,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(cache_parse_total_cnt) as cache_parse_total_cnt,
        sum(zgyd_cnt) as zgyd_cnt,
        sum(zgdx_cnt) as zgdx_cnt,
        sum(zglt_cnt) as zglt_cnt,
        sum(gat_cnt) as gat_cnt,
        sum(out_country_cnt) as out_country_cnt,
        sum(unknown_cnt) as unknown_cnt,
        row_number() over (partition by parse_time order by parse_total_cnt desc) as rank_number
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveAllParm"/>
        </where>
        group by parse_time, business
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by ${queryParam.orderBy}
        )
        <where>
            <if test="queryParam.rankNumber != null">
                rank_number &lt;= #{queryParam.rankNumber}
            </if>
        </where>
        limit #{queryParam.offset}, #{queryParam.limit})
        group by parse_time, business
        settings allow_experimental_window_functions = 1
    </select>


    <select id="findTableDataByParamAll"
            resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheCompany">
        select business,
        sum(parse_total_cnt) as parse_total_cnt,
        SUM(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
        sum(within_parse_total_cnt) as within_parse_total_cnt,
        sum(without_parse_total_cnt) as without_parse_total_cnt,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(cache_parse_total_cnt) as cache_parse_total_cnt,
        sum(zgyd_cnt) as zgyd_cnt,
        sum(zgdx_cnt) as zgdx_cnt,
        sum(zglt_cnt) as zglt_cnt,
        sum(gat_cnt) as gatCnt,
        sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
        sum(out_country_cnt) as out_country_cnt,
        sum(unknown_cnt) as unknown_cnt,
        sum(idc_parse_total_cnt+zl_parse_total_cnt + tt_parse_total_cnt + zx_parse_total_cnt) as icpAccuracyParseTotalCnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveAllParm"/>
            <if test="queryParam.rankNumber != null">
                and business global in (
                select business
                from ${queryParam.queryTable}
                <where>
                    <include refid="selectiveAllParm"/>
                </where>
                group by business
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc limit ${queryParam.rankNumber}
                )
            </if>
        </where>
        group by business
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by ${queryParam.orderBy}
        limit #{queryParam.offset}, #{queryParam.limit}
    </select>

    <select id="countFindTableDataByParamAll" resultType="java.lang.Long">
        select count(1) from (
        select business
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            , sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt
        </if>
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveAllParm"/>
            <if test="queryParam.rankNumber != null">
            and business global in (
            select business
            from ${queryParam.queryTable}
            <where>
                <include refid="selectiveAllParm"/>
            </where>
            group by business
            <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
            </if>
            order by sum(parse_total_cnt) desc limit ${queryParam.rankNumber}
            )
            </if>
        </where>
        group by business
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by sum(parse_total_cnt) desc
        )
    </select>

    <select id="findTableDataByParamEvery" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheCompany">
        select * from (
        select
        parse_time,
        business,
        sum(parse_total_cnt) as parse_total_cnt,
        SUM(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
        sum(within_parse_total_cnt) as within_parse_total_cnt,
        sum(without_parse_total_cnt) as without_parse_total_cnt,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(cache_parse_total_cnt) as cache_parse_total_cnt,
        sum(zgyd_cnt) as zgyd_cnt,
        sum(zgdx_cnt) as zgdx_cnt,
        sum(zglt_cnt) as zglt_cnt,
        sum(gat_cnt) as gat_cnt,
        sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
        sum(out_country_cnt) as out_country_cnt,
        sum(unknown_cnt) as unknown_cnt,
        row_number() over (partition by parse_time order by parse_total_cnt desc) as rank_number,
        sum(idc_parse_total_cnt+zl_parse_total_cnt + tt_parse_total_cnt + zx_parse_total_cnt) as icpAccuracyParseTotalCnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveAllParm"/>
        </where>
        group by parse_time, business
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by ${queryParam.orderBy}
        )
        <where>
            <if test="queryParam.rankNumber != null">
                rank_number &lt;= #{queryParam.rankNumber}
            </if>
        </where>
        limit #{queryParam.offset}, #{queryParam.limit}
        settings allow_experimental_window_functions = 1
    </select>

    <select id="countFindTableDataByParamEvery" resultType="java.lang.Long">
        select count(1) from (
        select * from (
        select parse_time, business,
        sum(parse_total_cnt) as parseTotalCnt,
        row_number() over (partition by parse_time order by parseTotalCnt desc) as rank_number
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveAllParm"/>
        </where>
        group by parse_time, business
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        )
        <where>
            <if test="queryParam.rankNumber != null">
                rank_number &lt;= #{queryParam.rankNumber}
            </if>
        </where>
        )
        settings allow_experimental_window_functions = 1
    </select>

    <select id="findParseReport" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheCompany">
        select parse_time,
        SUM(a_record_parse_total_cnt) as aRecordParseTotalCnt,
        sum(net_in_parse_total_cnt) as netInParseTotalCnt,
        sum(net_out_parse_total_cnt) as netOutParseTotalCnt,
        sum(parse_total_cnt) as cdnParseTotalCnt,
        sum(cache_parse_total_cnt) as cacheParseTotalCnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveAllParm"/>
        </where>
        group by parse_time

    </select>
    <select id="findRateReport" resultType="com.yamu.data.sample.service.resources.entity.po.ResourceCdnCacheCompany">

        select parse_time,
        sum(parse_total_cnt) as parseTotalCnt,
        SUM(a_record_parse_total_cnt) as aRecordParseTotalCnt,
        sum(net_in_parse_total_cnt) as netInParseTotalCnt,
        sum(net_out_parse_total_cnt) as netOutParseTotalCnt,
        sum(within_parse_total_cnt) as withinParseTotalCnt,
        sum(without_parse_total_cnt) as withoutParseTotalCnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveAllParm"/>
        </where>
        group by parse_time
    </select>
    <select id="findtopNServiceReport" resultType="com.yamu.data.sample.service.resources.entity.bo.ResourceCdnCacheCompanyReport">
        select
        website_app_name websiteAppName,
        sum(parse_total_cnt)  cdnParseTotalCnt
        from ${queryParam.queryCdnTable}
        <where>
            <include refid="selectiveAllCdnParm"/>
        </where>
        group by
        website_app_name
        order by cdnParseTotalCnt desc

    </select>
    <select id="topNServiceDetail" resultType="com.yamu.data.sample.service.resources.entity.bo.ResourceCdnCacheCompanyDetail">
        select *,round(cdnParseTotalCnt / business_parse_total_cnt, 4) cdnProportion from
        (select business businessName,website_app_name websiteAppName,
        SUM(parse_total_cnt) cdnParseTotalCnt,sum(cdnParseTotalCnt) over (PARTITION by business) as business_parse_total_cnt
        from ${queryParam.queryCdnTable}
        <where>
            <include refid="selectiveAllCdnParm"/>
        </where>
        group by business,website_app_name
        order by cdnParseTotalCnt desc
        limit #{queryParam.offset}, #{queryParam.limit}
        )
    </select>
    <select id="countTopNServiceDetail" resultType="java.lang.Long">
        select count(*) from
        (select business businessName,website_app_name websiteAppName,
        SUM(parse_total_cnt) cdnParseTotalCnt,sum(cdnParseTotalCnt) over (PARTITION by business) as business_parse_total_cnt
        from ${queryParam.queryCdnTable}
        <where>
            <include refid="selectiveAllCdnParm"/>
        </where>
        group by business,website_app_name
        )

    </select>

    <sql id="selectiveAllParm">
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.qtype != null and queryParam.qtype != ''">and qtype = #{queryParam.qtype}</if>
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != '' ">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.resourceType != null and queryParam.resourceType != ''">and resource_type = #{queryParam.resourceType}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.business != null and queryParam.business != ''">and business = #{queryParam.business} </if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
        <if test="queryParam.resourceRange !=null and queryParam.resourceRange !=''">and resource_range = #{queryParam.resourceRange}</if>
    </sql>

    <sql id="selectiveAllCdnParm">
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.qtype != null and queryParam.qtype != ''">and qtype = #{queryParam.qtype}</if>
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != '' and queryParam.statisticsWay == 'every'">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != '' and queryParam.statisticsWay != 'every'">and parse_time &lt; #{queryParam.endTime}</if>
        <if test="queryParam.resourceType != null and queryParam.resourceType != ''">and resource_type = #{queryParam.resourceType}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.business != null and queryParam.business != ''">and business = #{queryParam.business}</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.queryTime != null and queryParam.queryTime != ''">and parse_time = #{queryParam.queryTime}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
        <if test="queryParam.resourceRange !=null and queryParam.resourceRange !=''">and resource_range = #{queryParam.resourceRange}</if>
    </sql>

</mapper>