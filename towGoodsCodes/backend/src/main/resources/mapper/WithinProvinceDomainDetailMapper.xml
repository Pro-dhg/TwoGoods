<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yamu.data.sample.service.resources.mapper.WithinProvinceDomainDetailMapper">

    <select id="countFindTrendListParam" resultType="java.lang.Long">
        select count(1) from
        (
        select
        parse_time,
        domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            , sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt
        </if>
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
            <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_name global in (
                select
                domain_name
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by domain_name
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber})
            </if>
        </where>
        group by parse_time, domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        )
    </select>

    <select id="findTrendListByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.WithinProvinceDomainDetail">
        select
        <include refid="findTrendListSumColumn"/>
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
            <if test = "queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_name global in (
                select
                domain_name
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by domain_name
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber}
                )
            </if>
        </where>
        group by parse_time, domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by ${queryParam.orderBy}
        limit #{queryParam.offset}, #{queryParam.limit}
    </select>


    <select id="findNowTrendListByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.WithinProvinceDomainDetail">
        select * from(
        select *,
        row_number() OVER (ORDER BY parse_total_cnt DESC) rank_number
        from (
        select
        <include refid="findLastTrendListSumColumn"/>
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
            <if test = "queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_name global in (
                select
                domain_name
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by domain_name
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber}
                )
            </if>
        </where>
        group by parse_time, domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by parse_time desc,parse_total_cnt desc
        limit #{queryParam.offset}, #{queryParam.limit}))
        <where>
            rank_number &lt;= 20
        </where>
        settings allow_experimental_window_functions = 1
    </select>



    <select id="findLastTrendListByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.WithinProvinceDomainDetail">

    select <include refid="findLastTrendListSumColumn"/>
    from ${queryParam.queryTable}
    <where>
    <if test="queryParam.lastStartTime != null"> parse_time &gt;= #{queryParam.lastStartTime}</if>
    <if test="queryParam.lastEndTime != null">and parse_time &lt;= #{queryParam.lastEndTime}</if>
    and domain_name global in
    (select domain_name from(
        select domain_name,
        row_number() OVER (ORDER BY parse_total_cnt DESC) rank_number
        from (
        select
        <include refid="findLastTrendListSumColumn"/>
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
            <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_name global in (
                select
                domain_name
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by domain_name
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber}
                )
            </if>
        </where>
        group by parse_time, domain_name
        order by parse_time desc,parse_total_cnt desc
        limit #{queryParam.offset}, #{queryParam.limit}))
        <where>
            rank_number &lt;= 20
        </where>)
        </where>
        group by
        parse_time,
        domain_name
        order by
        parse_time,
        parse_total_cnt desc
        settings allow_experimental_window_functions = 1
    </select>


    <select id="findTrendReportGroupByIspByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.WithinProvinceDomainDetail">
        select  answer_first_isp  as isp, sum(a_record_parse_total_cnt) as a_record_parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParamByReport"/>
            <if test = "queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_name global in (
                select
                domain_name
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by
                domain_name
                order by sum(a_record_parse_total_cnt) desc limit #{queryParam.rankNumber}
                )
            </if>
        </where>
        group by answer_first_isp
        order by a_record_parse_total_cnt desc
    </select>
    <select id="findTrendReportGroupByParseByParam"
            resultType="com.yamu.data.sample.service.resources.entity.po.WithinProvinceDomainDetail">
        select
        parse_time,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(parse_success_cnt) as parse_success_cnt,
        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
        sum(within_parse_total_cnt) as within_parse_total_cnt,
        sum(without_parse_total_cnt) as without_parse_total_cnt,
        sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
        sum(idc_parse_total_cnt) as idc_parse_total_cnt
        from ${queryParam.queryTable}
        where
        parse_time &gt;= #{queryParam.startTime}
        and parse_time &lt;= #{queryParam.endTime}
        and domain_name global in (select
        domain_name
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParamByReport"/>
            <if test = "queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_name global in (
                select
                domain_name
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by domain_name
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber}
                )
            </if>
        </where>
        group by domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        )
        group by parse_time
    </select>

    <select id="countFindTrendListParamAll" resultType="java.lang.Long">
        select count(1) from
        (
        select
        domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            , sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt
        </if>
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
            <if test="queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_name global in (
                select
                domain_name
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by domain_name
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber})
            </if>
        </where>
        group by domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        )
    </select>

    <select id="findTrendListByParamAll"
            resultType="com.yamu.data.sample.service.resources.entity.po.WithinProvinceDomainDetail">
        select
        domain_name,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(parse_success_cnt) as parse_success_cnt,
        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
        sum(within_parse_total_cnt) as within_parse_total_cnt,
        sum(without_parse_total_cnt) as without_parse_total_cnt,
        sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
        sum(idc_parse_total_cnt) as idc_parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
            <if test = "queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_name global in (
                select
                domain_name
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by domain_name
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber}
                )
            </if>
        </where>
        group by domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by ${queryParam.orderBy}
        limit #{queryParam.offset}, #{queryParam.limit}
    </select>

    <select id="findNowTrendListByParamAll"
            resultType="com.yamu.data.sample.service.resources.entity.po.WithinProvinceDomainDetail">
        select * from(
        select *,
        row_number() OVER (ORDER BY parse_total_cnt DESC) rank_number
        from (
        select
        domain_name,
        sum(parse_total_cnt) as parse_total_cnt
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            , sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
            sum(a_record_parse_total_cnt) as a_record_parse_total_cnt
        </if>
        from ${queryParam.queryTable}
        <where>
            <include refid="selectiveParam"/>
            <if test = "queryParam.rankNumber != null and queryParam.rankNumber != ''">
                and domain_name global in (
                select
                domain_name
                from
                ${queryParam.queryTable}
                <where>
                    <if test="queryParam.startTime != null">parse_time &gt;= #{queryParam.startTime}</if>
                    <if test="queryParam.endTime != null">and parse_time &lt;= #{queryParam.endTime}</if>
                </where>
                group by domain_name
                <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
                    having if(sum(a_record_parse_total_cnt) == 0, 0.0, divide(sum(net_in_parse_total_cnt) * 100, sum(a_record_parse_total_cnt)))
                    between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
                </if>
                order by sum(parse_total_cnt) desc limit #{queryParam.rankNumber}
                )
            </if>
        </where>
        group by domain_name
        <if test="queryParam.netInRateMin != null and queryParam.netInRateMax != null">
            having if(a_record_parse_total_cnt == 0, 0.0, divide(net_in_parse_total_cnt * 100, a_record_parse_total_cnt))
            between #{queryParam.netInRateMin} and #{queryParam.netInRateMax}
        </if>
        order by parse_total_cnt desc
        limit #{queryParam.offset}, #{queryParam.limit}))
        <where>
            rank_number &lt;= 20
        </where>
        settings allow_experimental_window_functions = 1
    </select>

    <select id="findLastTrendListByParamAll"
            resultType="com.yamu.data.sample.service.resources.entity.po.WithinProvinceDomainDetail">
        select
        domain_name,
        sum(parse_total_cnt) as parse_total_cnt
        from ${queryParam.queryTable}
        <where>
            <if test="queryParam.lastStartTime != null"> parse_time &gt;= #{queryParam.lastStartTime}</if>
            <if test="queryParam.lastEndTime != null">and parse_time &lt;= #{queryParam.lastEndTime}</if>
            and domain_name  in
            <foreach collection="websites" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </where>
        group by domain_name
        order by parse_total_cnt desc
        settings allow_experimental_window_functions = 1
    </select>

    <sql id="findTrendListColumn">
        parse_time,
        domain_name,
        parse_total_cnt,
        a_record_parse_total_cnt,
        parse_success_cnt,
        net_in_parse_total_cnt,
        net_out_parse_total_cnt,
        within_parse_total_cnt,
        without_parse_total_cnt,
        cdn_parse_total_cnt,
        idc_parse_total_cnt
    </sql>

    <sql id="findTrendListSumColumn">
        parse_time,
        parse_time as parse_time_last,
        domain_name,
        sum(parse_total_cnt) as parse_total_cnt,
        sum(a_record_parse_total_cnt) as a_record_parse_total_cnt,
        sum(parse_success_cnt) as parse_success_cnt,
        sum(net_in_parse_total_cnt) as net_in_parse_total_cnt,
        sum(net_out_parse_total_cnt) as net_out_parse_total_cnt,
        sum(within_parse_total_cnt) as within_parse_total_cnt,
        sum(without_parse_total_cnt) as without_parse_total_cnt,
        sum(cdn_parse_total_cnt) as cdn_parse_total_cnt,
        sum(idc_parse_total_cnt) as idc_parse_total_cnt
    </sql>

    <sql id="findLastTrendListSumColumn">
        parse_time,
        parse_time as parse_time_last,
        domain_name,
        sum(parse_total_cnt) as parse_total_cnt
    </sql>

    <sql id="selectiveParam">
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != ''">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.domainName != null and queryParam.domainName != ''">and domain_name ilike concat('%',#{queryParam.domainName},'%')</if>
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>

    <sql id="selectiveParamByReport">
        <if test="queryParam.startTime != null and queryParam.startTime != ''">and parse_time &gt;= #{queryParam.startTime}</if>
        <if test="queryParam.endTime != null and queryParam.endTime != ''">and parse_time &lt;= #{queryParam.endTime}</if>
        <if test="queryParam.domainName != null and queryParam.domainName != ''">and domain_name ilike concat('%',#{queryParam.domainName},'%')</if>
        <if test="queryParam.districtsCode != null and queryParam.districtsCode != ''">and districts_code = #{queryParam.districtsCode}</if>
        <if test="queryParam.country != null and queryParam.country != ''">and country = #{queryParam.country}</if>
        <if test="queryParam.province != null and queryParam.province != ''">and province = #{queryParam.province}</if>
        <if test="queryParam.city != null and queryParam.city != ''">and city = #{queryParam.city}</if>
        <if test="queryParam.district != null and queryParam.district != ''">and district = #{queryParam.district}</if>
        <if test="queryParam.isp != null and queryParam.isp != ''">and isp = #{queryParam.isp}</if>
        <if test="queryParam.ispCode != null and queryParam.ispCode != ''">and isp_code = #{queryParam.ispCode}</if>
        <if test="queryParam.userType != null and queryParam.userType != ''">and user_type = #{queryParam.userType}</if>
        <if test="queryParam.serverNodeName !=null and queryParam.serverNodeName !=''">and server_node_name = #{queryParam.serverNodeName}</if>
    </sql>

</mapper>
